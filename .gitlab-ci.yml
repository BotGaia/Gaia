image: docker:latest

variables:
  LATEST_VER_BOT_PROD: caleberios/gaia:latest
  LATEST_VER_ACTION_PROD: caleberios/gaia-actions:latest
  LATEST_VER_BOT_HML: caleberios/gaia:homolog
  LATEST_VER_ACTION_HML: caleberios/gaia-actions:homolog

stages:
  - build
  - deploy

build bot:
  stage: build
  services:
    - docker:dind
  script:
    - apk add --no-cache py-pip python-dev libffi-dev openssl-dev gcc libc-dev make
    - pip install docker-compose
    - docker-compose up bot

deployHomolog:
  stage: deploy
  services:
    - docker:dind
  only:
    - dev
  script:
    - docker build -t $LATEST_VER_BOT_HML -f docker/bot.Dockerfile .
    - docker build -t $LATEST_VER_ACTION_HML -f docker/actions.Dockerfile .
    - echo "$REGISTRY_PASSWORD" | docker login -u "$REGISTRY_USER" --password-stdin
    - docker push $LATEST_VER_BOT_HML && docker image rm $LATEST_VER_BOT_HML
    - docker push $LATEST_VER_ACTION_HML && docker image rm $LATEST_VER_ACTION_HML

deployProd:
  stage: deploy
  services:
    - docker:dind
  only:
    - master
  script:
    - docker build -t $LATEST_VER_BOT_PROD -f docker/bot.Dockerfile .
    - docker build -t $LATEST_VER_ACTION_PROD -f docker/actions.Dockerfile .
    - echo "$REGISTRY_PASSWORD" | docker login -u "$REGISTRY_USER" --password-stdin
    - docker push $LATEST_VER_BOT_PROD && docker image rm $LATEST_VER_BOT_PROD
    - docker push $LATEST_VER_ACTION_PROD && docker image rm $LATEST_VER_ACTION_PROD
